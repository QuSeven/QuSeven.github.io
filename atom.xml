<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>SeAの博客</title>
  
  <subtitle>爬虫不怕虫</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://yoursite.com/"/>
  <updated>2020-05-13T09:09:48.609Z</updated>
  <id>http://yoursite.com/</id>
  
  <author>
    <name>阿七</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>基础总结</title>
    <link href="http://yoursite.com/2020/05/13/%E5%9F%BA%E7%A1%80%E6%80%BB%E7%BB%93/"/>
    <id>http://yoursite.com/2020/05/13/%E5%9F%BA%E7%A1%80%E6%80%BB%E7%BB%93/</id>
    <published>2020-05-13T08:42:50.316Z</published>
    <updated>2020-05-13T09:09:48.609Z</updated>
    
    <content type="html"><![CDATA[<blockquote></blockquote><a id="more"></a><h1 id="正则表达式"><a href="#正则表达式" class="headerlink" title="正则表达式"></a>正则表达式</h1><h2 id="什么是正则表达式"><a href="#什么是正则表达式" class="headerlink" title="什么是正则表达式"></a>什么是正则表达式</h2><p>世界上的信息是非常多的，但是我们关注的信息是有限的，假如我们希望只提取关注的数据，此时可以通过一些表达式进行提取，正则表达式就是其中一种进行数据筛选的表达式。<br>##常见匹配模式<br>^ ：^会匹配行或者字符串的起始位置，有时还会匹配整个文档的起始位置。</p><p>$ ：$会匹配行或字符串的结尾</p><p>\b :不会消耗任何字符只匹配一个位置，常用于匹配单词边界 如 我想从字符串中”This is Regex”匹配单独的单词 “is” 正则就要写成 “\bis\b”</p><p>　　 \b 不会匹配is 两边的字符，但它会识别is 两边是否为单词的边界</p><p>\d: 匹配数字，例如要匹配一个固定格式的电话号码以0开头前4位后7位，如0737-5686123 正则:^0\d\d\d-\d\d\d\d\d\d\d$</p><p>\w：匹配字母，数字，下划线.</p><p>　　 例如我要匹配”a2345BCD__TTz” 正则：”\w+” 这里的”+”字符为一个量词指重复的次数，稍后会详细介绍。</p><p>\s：匹配空格</p><p>　　 例如字符 “a b c” 正则：”\w\s\w\s\w” 一个字符后跟一个空格，如有字符间有多个空格直接把”\s” 写成 “\s+” 让空格重复</p><p>.：匹配除了换行符以外的任何字符</p><p>[abc]: 字符组 匹配包含括号内元素的字符</p><p>\W：匹配任意不是字母，数字，下划线 的字符</p><p>\S：匹配任意不是空白符的字符</p><p>\D：匹配任意非数字的字符</p><p>\B：匹配不是单词开头或结束的位置</p><p>[^abc]：匹配除了abc以外的任意字符</p><h2 id="函数"><a href="#函数" class="headerlink" title="函数"></a>函数</h2><p>re.match()：从头开始匹配，匹配的内容必须从头开始，不然不能匹配到</p><p>re.search()：从字符串中搜索一个能够匹配的出来，这个匹配结果在字符串中的位置没有要求</p><p>re.findall():搜索字符串，以列表的形式返回全部字符串</p><p>re.sub()：替换</p><h2 id="原子"><a href="#原子" class="headerlink" title="原子"></a>原子</h2><p>原子是正则表达式中最基本的组成单位，每个正则表达式中至少要包含一个原子，常见的原子类型有：</p><p>普通字符作为原子<br>非打印字符作为原子<br>通用字符作为原子<br>原子表</p><h2 id="原子表"><a href="#原子表" class="headerlink" title="原子表"></a>原子表</h2><p>用方括号括起来的字符都是平等的，但是只能匹配一个,例如[a,b,c]这个原子表，只会匹配其中一个原子</p><h2 id="元字符"><a href="#元字符" class="headerlink" title="元字符"></a>元字符</h2><p>元字符就是正则表达式中具有一些特殊含义的字符，比如重复N次前面的字符</p><p>.：匹配任意字符</p><p>^：匹配字符串开始的位置</p><p>$：匹配字符串结束的位置<br>##模式分组<br>()：通常用于提取某一个内容上，使用正则表达式匹配的时候需要将里面的某些内容提取出来的时候就将特定的表达式内容放到小括号中去</p><p>|：或，只匹配在字符串中出现的第一个<br>##模式修正符<br>I：让表达式忽略大小写</p><p>M：多行匹配</p><p>L：本地化识别匹配</p><p>U：根据Unicode字符解析字符</p><p>pattern = ‘python’<br>string = ‘dshdjkPythonfsid’<br>result = re.search(pattern,string)<br>print(result)<br> 应为严格区分大小写，所以不能匹配出来<br>None<br>‘’’用模式修正符I，匹配的时候忽略大小写’’’<br>pattern = ‘python’<br>string = ‘dshdjkPythonfsid’<br>result = re.search(pattern, string, re.I)<br>print(result.group())<br>Python<br>S：让.匹配的内容也包括换行符</p><p>pattern = ‘abc.+’<br>string = ‘’’abc<br>            de’’’<br>result = re.search(pattern, string)<br>print(result)<br>None<br>pattern = ‘abc.’<br>string = ‘’’abc<br>            de’’’<br>result = re.search(pattern, string, re.S)<br>print(result)<br>&lt;re.Match object; span=(0, 4), match=’abc\n’&gt;</p><h2 id="量词"><a href="#量词" class="headerlink" title="量词"></a>量词</h2><p><em>：重复零次或者更多次（贪婪）例如”aaaaaaaa” 匹配字符串中所有的a 正则： “a</em>” 会出到所有的字符”a”</p><p>+：重复一次或者更多次（懒惰）例如”aaaaaaaa” 匹配字符串中所有的a 正则： “a+” 会取到字符中所有的a字符， “a+”与”a<em>”不同在于”+”至少是一次而”</em>” 可以是0次</p><p>?：重复零次或者一次（占有）例如”aaaaaaaa” 匹配字符串中的a 正则 ： “a?” 只会匹配一次，也就是结果只是单个字符a</p><p>{n}：重复n次 例如从”aaaaaaaa” 匹配字符串的a 并重复3次 正则： “a{3}” 结果就是取到3个a字符 “aaa”</p><p>{n,m}：重复n到m次 例如正则 “a{3,4}” 将a重复匹配3次或者4次 所以供匹配的字符可以是三个”aaa”也可以是四个”aaaa” 正则都可以匹配到</p><p>{n,}：重复n次或更多次 与{n,m}不同之处就在于匹配的次数将没有上限，但至少要重复n次 如 正则”a{3,}” a至少要重复3次</p><h2 id="懒惰限定符"><a href="#懒惰限定符" class="headerlink" title="懒惰限定符"></a>懒惰限定符</h2><p><em>?：重复任意次，但尽可能少重复 如 “acbacb” 正则”a.</em>?b”只会取到第一个”acb” 原本可以全部取到但加了限定符后，只会匹配尽可能少的字符 ，而”acbacb”最少字符的结果就是”acb”</p><p>+?：重复1次或更多次，但尽可能少重复，与*?一样，只是至少要重复1次</p><p>??：重复0次或1次，但尽可能少重复，如 “aaacb” 正则 “a.??b” 只会取到最后的三个字符”acb”</p><p>{n,m}?：重复n到m次，但尽可能少重复，如 “aaaaaaaa” 正则 “a{0,m}” 因为最少是0次所以取到结果为空</p><p>{n,}?：重复n次以上，但尽可能少重复，如 “aaaaaaa” 正则 “a{1,}” 最少是1次所以取到结果为 “a”</p><h2 id="贪婪模式与懒惰模式"><a href="#贪婪模式与懒惰模式" class="headerlink" title="贪婪模式与懒惰模式"></a>贪婪模式与懒惰模式</h2><p>贪婪模式就是经可能多的去匹配，懒惰模式就是尽可能少的匹配</p><h2 id="转义字符"><a href="#转义字符" class="headerlink" title="转义字符"></a>转义字符</h2><p>想要匹配特殊字符，可以在特殊字符前加一个换行符</p><p>#python语法基础<br>##定义变量，使用变量<br>input 用户自己输入值<br>print 打印值 可以输出多个变量<br>%d|%s 用于输出变量时占位<br>##字符串(后期爬虫必备)<br>int()把字符串转换为数字<br>str()把数字转换为字符串<br>len()获取某个字符占用的字节数<br>字符串可以用+连接<br>字符下标可以为负数<br>str[起始位置:终止位置:步长]切片，从起始开始截取字符串，到终止位置结束，不包括终止位置<br>str[::-1]倒序<br>str.find()|rfind 字符串查找<br>str.index()|rindex()字符串查找，与find不同的是返回的结果不同<br>str.count(str,start=0,end=len(str))字符串出现的次数<br>str.replace(“str”,”str”,替换次数)字符串替换，不会影响原字符串<br>str.split(“ “)字符串切割，参数可以不用写自动切割<br>str.capitalize()把字符串中的第一个字符大写<br>str.title()把字符串中每个单词大写<br>str.startswith(obj)|endswith(obj)判断字符串是否以obj开头|结尾，返回bool<br>str.lower()把所有大写转换为小写<br>str.upper()把所有小写转换为大写<br>str.ljust()返回一个原字符串左对齐，并使用空格填充至长度width的新字符串<br>str.rjust(width)返回一个原字符串右对齐，并使用空格填充至长度width的新字符串<br>str.center()返回一个原字符串居中对齐，并使用空格填充至长度width的新字符串<br>str.lstrip()删除字符串开头的空白字符<br>str.rstrip()删除字符串末尾的空白字符<br>str.strip()删除字符串两端的空白字符<br>str.partition()把str分成三部分，str前，str,和str后<br>str.rpartition()把str分成三部分，str前，str,和str后，从右边开始分<br>str.splitlines()按照行分割，返回一个各行作为元素的列表<br>str.isalpha()判断字符串是否都是字母<br>str.isdigit()判断字符串是否都是数字<br>str.isalnum()判断字符串是否都是数字或字母<br>str.isspace()判断字符串是否都是空格<br>str.join(mystr)每个字符后面添加一个mystr，构建出一个新的字符串<br>##运算符<br>（+） 加<br>（ -） 减<br>（<em>） 乘 乘号还可以让字符串重复n次<br>（/） 除<br>（//） 取商<br>（%） 取余<br>（*</em>） 冥 2的十次方1024,2的16次方65536<br>##if语句<br>判断语句：（if 条件：else 条件：）条件必须加tab键，不然会被当正常代码执行<br>比较运算符：&gt; | &lt; | &gt;= | &lt;= | !=<br>逻辑运算符 or | and | not<br>if.. elif elif…else… 语句<br>##循环语句<br>while循环———–print(“”)换行 end=””不换行<br>for循环—-可以直接循环字符串<br>break（跳出循环） 与 continue （跳出本次循环）<br>##列表<br>类似php中的数组<br>列表=[数据]<br>##列表的增删改查：<br>列表.append 增加<br>列表.insert(位置，内容) 增加<br>列表.extend(列表) 合并列表，也可以用+运算符<br>列表.pop()删除列表最后一个元素<br>列表.remove(内容)可以删除指定内容，只删除一次<br>del 列表[下标]删除指定下标内容<br>列表[下标]=修改元素<br>元素 in | not in 列表 判断元素是否在列表<br>##字典<br>字典={键值对}<br>##字典的增删改查：<br>增：字典[key]=value<br>删：del 字典[key]<br>改：字典[key]=value<br>查：字典.get[key]<br>字典.keys :查看字典的key<br>字典.values :查看字典的values<br>字典.items()：把字典变为元组<br>##元组<br>元组=(值)<br>元组可以把值赋给多个变量：a,b=元组<br>元组定义的值不支持修改<br>如果元组只有一个参数，则必须多写一个逗号，不然不是元组<br>元组可以为空<br>##函数<br>函数的定义：def 函数名():内容<br>列表、字典、可以当做全局变量使用<br>不定长参数(以元组形式保存数据)：def 函数名(<em>args):内容<br>不定长参数(以字典形式保存键值对)：def 函数名(*</em>kargs):内容<br>实参前面可以加或者*表示拆包<br>.sort()从小到大排序<br>.sort(reverse=true)从大到小排序<br>.reverse()倒序<br>lambda匿名函数的使用<br>eval()转换为表达式<br>交换两个变量的值：可以用第三个变量，也可以不用，如交换a跟b，a=a+b,b=a-b,a=a-b,python也可以这样子写：a,b=b,a<br>修改可以使用+=,仅限于可变类型，列表和字典<br>num+=num并不等价于num=num+num<br>##文件操作<br>open()打开文件<br>close()关闭文件<br>read()读取文件<br>write()写文件<br>readlines()按照行读数据<br>readline()只读一行数据<br>seek(offset,from)定位读写,offset偏移量，from=0文件开头，from=1当前位置，from=2文件末尾，seek实际上就是控制文件指针<br>tell()获取文件当前指针位置<br>os.rename()文件重命名<br>os.remove()删除文件<br>os.mkdir()创建文件夹<br>os.getcwd()获取当前操作绝对目录<br>os.chdir()改变默认操作目录<br>os.listdir()获取目录列表<br>os.rmdir()删除文件夹</p>]]></content>
    
    <summary type="html">
    
      &lt;blockquote&gt;
&lt;/blockquote&gt;
    
    </summary>
    
    
    
  </entry>
  
  <entry>
    <title>学长课堂作业</title>
    <link href="http://yoursite.com/2020/04/30/%E4%BD%9C%E4%B8%9A/"/>
    <id>http://yoursite.com/2020/04/30/%E4%BD%9C%E4%B8%9A/</id>
    <published>2020-04-30T02:56:21.854Z</published>
    <updated>2020-05-13T08:42:39.093Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p>更新了</p></blockquote><a id="more"></a><h1 id="翻译"><a href="#翻译" class="headerlink" title="翻译"></a>翻译</h1><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> request</span><br><span class="line"><span class="keyword">import</span> json</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">get_res</span><span class="params">()</span>:</span></span><br><span class="line">    url = <span class="string">"https://cn.bing.com/translator/"</span></span><br><span class="line">    text =input(<span class="string">"请输入翻译的内容:"</span>)</span><br><span class="line">    data = &#123;</span><br><span class="line">        <span class="string">"from"</span>: <span class="string">"zh-Hans"</span>,</span><br><span class="line">        <span class="string">"to"</span>: <span class="string">"en"</span>,</span><br><span class="line">        <span class="string">"text"</span>: text</span><br><span class="line">    &#125;</span><br><span class="line">    response = resquests.post(url=url,data=data)</span><br><span class="line">    translate = response.content.decode(<span class="string">"utf-8"</span>)</span><br><span class="line">    translate = json.loads(translate)</span><br><span class="line">    <span class="keyword">for</span> item <span class="keyword">in</span> translate[<span class="string">"translations"</span>]</span><br><span class="line">         print(item[<span class="string">"normalizedTarget"</span>])</span><br><span class="line">    </span><br><span class="line">get_res()</span><br></pre></td></tr></table></figure><h1 id="省份爬取"><a href="#省份爬取" class="headerlink" title="省份爬取"></a>省份爬取</h1><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br></pre></td><td class="code"><pre><span class="line">html &#x3D; &quot;&quot;&quot;&lt;HTML&gt;</span><br><span class="line">&lt;HEAD&gt;</span><br><span class="line">&lt;META content&#x3D;&quot;text&#x2F;html; charset&#x3D;gb2312&quot; http-equiv&#x3D;Content-Type&gt;</span><br><span class="line">&lt;TITLE&gt;关于更新全国统计用区划代码和城乡划分代码的公告 &lt;&#x2F;TITLE&gt;</span><br><span class="line">&lt;STYLE type&#x3D;text&#x2F;css&gt;</span><br><span class="line">BODY &#123;MARGIN: 0px&#125;BODY &#123;FONT-SIZE: 12px&#125;</span><br><span class="line">TD &#123;FONT-SIZE: 12px&#125;</span><br><span class="line">TH &#123;FONT-SIZE: 12px&#125;</span><br><span class="line">.redBig &#123;COLOR: #d00018; FONT-SIZE: 18px; FONT-WEIGHT: bold&#125;</span><br><span class="line">.STYLE3 a&#123;COLOR: #fff; text-decoration:none;&#125;</span><br><span class="line">.STYLE5 &#123;COLOR: #236fbe; FONT-WEIGHT: bold&#125;</span><br><span class="line">.content &#123;LINE-HEIGHT: 1.5; FONT-SIZE: 10.4pt&#125;</span><br><span class="line">.tdPading &#123;PADDING-LEFT: 30px&#125;.blue &#123;COLOR: #0000ff&#125;</span><br><span class="line">.STYLE6 &#123;COLOR: #ffffff&#125;</span><br><span class="line">.a2 &#123;LINE-HEIGHT: 1.5; COLOR: #2a6fbd; FONT-SIZE: 12px&#125;</span><br><span class="line">a2:link &#123;LINE-HEIGHT: 1.5; COLOR: #2a6fbd; FONT-SIZE: 12px&#125;</span><br><span class="line">a2:hover &#123;LINE-HEIGHT: 1.5; COLOR: #2a6fbd; FONT-SIZE: 12px; TEXT-DECORATION: underline&#125;</span><br><span class="line">a2:visited &#123;LINE-HEIGHT: 1.5; COLOR: #2a6fbd; FONT-SIZE: 12px&#125;</span><br><span class="line">&lt;&#x2F;STYLE&gt;</span><br><span class="line">&lt;SCRIPT language&#x3D;javascript&gt;</span><br><span class="line">function doZoom(size)&#123;document.getElementById(&#39;zoom&#39;).style.fontSize&#x3D;size+&#39;px&#39;;&#125;</span><br><span class="line">&lt;&#x2F;SCRIPT&gt;</span><br><span class="line">&lt;META name&#x3D;GENERATOR content&#x3D;&quot;MSHTML 8.00.7600.16700&quot;&gt;</span><br><span class="line">&lt;&#x2F;HEAD&gt;</span><br><span class="line">&lt;BODY&gt;</span><br><span class="line">&lt;TABLE border&#x3D;0 cellSpacing&#x3D;0 cellPadding&#x3D;0 width&#x3D;778 align&#x3D;center&gt;</span><br><span class="line">&lt;TBODY&gt;</span><br><span class="line">&lt;TR&gt;&lt;TD colSpan&#x3D;2&gt;&lt;IMG src&#x3D;&quot;http:&#x2F;&#x2F;www.stats.gov.cn&#x2F;images&#x2F;banner.jpg&quot; width&#x3D;778 height&#x3D;135&gt;&lt;&#x2F;TD&gt;&lt;&#x2F;TR&gt;&lt;&#x2F;TBODY&gt;&lt;&#x2F;TABLE&gt;&lt;MAP id&#x3D;Map name&#x3D;Map&gt;&lt;AREA href&#x3D;&quot;http:&#x2F;&#x2F;www.stats.gov.cn&#x2F;english&#x2F;&quot; shape&#x3D;rect coords&#x3D;277,4,328,18&gt;&lt;AREA href&#x3D;&quot;http:&#x2F;&#x2F;www.stats.gov.cn:82&#x2F;&quot; shape&#x3D;rect coords&#x3D;181,4,236,18&gt;&lt;AREA href&#x3D;&quot;http:&#x2F;&#x2F;www.stats.gov.cn&#x2F;&quot; shape&#x3D;rect coords&#x3D;85,4,140,17&gt;&lt;&#x2F;MAP&gt;&lt;TABLE border&#x3D;0 cellSpacing&#x3D;0 cellPadding&#x3D;0 width&#x3D;778 align&#x3D;center&gt;&lt;TBODY&gt;&lt;TR&gt;&lt;TD vAlign&#x3D;top&gt;&lt;TABLE style&#x3D;&quot;MARGIN-TOP: 15px; MARGIN-BOTTOM: 18px&quot; border&#x3D;0 cellSpacing&#x3D;0 cellPadding&#x3D;0 width&#x3D;&quot;100%&quot; align&#x3D;center&gt;&lt;TBODY&gt;&lt;TR&gt;&lt;TD style&#x3D;&quot; BACKGROUND-REPEAT: repeat-x; BACKGROUND-POSITION: 50% top&quot; background&#x3D;images&#x2F;topLine.gif align&#x3D;right&gt;&lt;&#x2F;TD&gt;&lt;&#x2F;TR&gt;&lt;TR&gt;&lt;TD style&#x3D;&quot; BACKGROUND-REPEAT: repeat-y; BACKGROUND-POSITION: right 50%&quot; vAlign&#x3D;top background&#x3D;images&#x2F;rightBorder.gif&gt;&lt;TABLE border&#x3D;0 cellSpacing&#x3D;0 cellPadding&#x3D;0 width&#x3D;&quot;100%&quot;&gt;&lt;TBODY&gt;&lt;TR&gt;&lt;TD width&#x3D;&quot;1%&quot; height&#x3D;&quot;200&quot; vAlign&#x3D;top&gt;</span><br><span class="line">&lt;table class&#x3D;&#39;provincetable&#39; width&#x3D;775 &gt;&lt;tr &gt;&lt;td colspan&#x3D;8  height&#x3D;1 style&#x3D;&#39;FONT-SIZE: 5px&#39; &gt;&amp;nbsp;&lt;&#x2F;td&gt;&lt;&#x2F;tr&gt;</span><br><span class="line">&lt;tr class&#x3D;&#39;provincehead&#39;&gt;&lt;td  colspan&#x3D;8 align&#x3D;&#39;center&#39; style&#x3D;&#39;FONT-SIZE: 16px&#39; height&#x3D;39 vAlign&#x3D;&#39;center&#39; background&#x3D;&#39;images&#x2F;tiao.jpg&#39;&gt;</span><br><span class="line">&lt;strong&gt;关于更新全国统计用区划代码和城乡划分代码的公告&lt;&#x2F;strong&gt;&lt;&#x2F;td&gt;</span><br><span class="line">&lt;&#x2F;tr&gt;&lt;tr &gt;</span><br><span class="line">  &lt;td colspan&#x3D;8  height&#x3D;50 style&#x3D;&#39;FONT-SIZE: 12px&#39; &gt; 　　为更好满足2020年常规统计调查和专项调查的需要，国家统计局组织开展了2019年度统计用区划代码和城乡划分代码更新维护工作，调查时点为2019年10月31日。目前，已完成更新维护工作,现予公布。</span><br><span class="line">  &lt;br&gt; 　　2019年统计用区划代码和城乡划分代码依据国务院批复同意的《关于统计上划分城乡的规定》（国函〔2008〕60号）及国家统计局印发的《统计用区划代码和城乡划分代码编制规则》（国统字〔2009〕91号）编制。</span><br><span class="line">  &lt;br&gt; 　　此次发布内容为2019年全国统计用区划代码（12位）和城乡分类代码（3位），地域范围为国家统计局开展统计调查的全国31个省、自治区、直辖市，未包括我国台湾省、香港特别行政区、澳门特别行政区。</span><br><span class="line">  &lt;br&gt; 　　《关于统计上划分城乡的规定》指出：“本规定作为统计上划分城乡的依据，不改变现有的行政区划、隶属关系、管理权限和机构编制，以及土地规划、城乡规划等有关规定”。统计用区划代码和城乡划分代码，在统计工作中应当使用，需要在其他工作中使用时，请务必结合有关实际情况。</span><br><span class="line">  &lt;&#x2F;td&gt;</span><br><span class="line">&lt;&#x2F;tr&gt;</span><br><span class="line">&lt;tr class&#x3D;&#39;provincetr&#39;&gt;&lt;td&gt;&lt;a href&#x3D;&#39;11.html&#39;&gt;北京市&lt;br&#x2F;&gt;&lt;&#x2F;a&gt;&lt;&#x2F;td&gt;&lt;td&gt;&lt;a href&#x3D;&#39;12.html&#39;&gt;天津市&lt;br&#x2F;&gt;&lt;&#x2F;a&gt;&lt;&#x2F;td&gt;&lt;td&gt;&lt;a href&#x3D;&#39;13.html&#39;&gt;河北省&lt;br&#x2F;&gt;&lt;&#x2F;a&gt;&lt;&#x2F;td&gt;&lt;td&gt;&lt;a href&#x3D;&#39;14.html&#39;&gt;山西省&lt;br&#x2F;&gt;&lt;&#x2F;a&gt;&lt;&#x2F;td&gt;&lt;td&gt;&lt;a href&#x3D;&#39;15.html&#39;&gt;内蒙古自治区&lt;br&#x2F;&gt;&lt;&#x2F;a&gt;&lt;&#x2F;td&gt;&lt;td&gt;&lt;a href&#x3D;&#39;21.html&#39;&gt;辽宁省&lt;br&#x2F;&gt;&lt;&#x2F;a&gt;&lt;&#x2F;td&gt;&lt;td&gt;&lt;a href&#x3D;&#39;22.html&#39;&gt;吉林省&lt;br&#x2F;&gt;&lt;&#x2F;a&gt;&lt;&#x2F;td&gt;&lt;td&gt;&lt;a href&#x3D;&#39;23.html&#39;&gt;黑龙江省&lt;br&#x2F;&gt;&lt;&#x2F;a&gt;&lt;&#x2F;td&gt;&lt;&#x2F;tr&gt;</span><br><span class="line">&lt;tr class&#x3D;&#39;provincetr&#39;&gt;&lt;td&gt;&lt;a href&#x3D;&#39;31.html&#39;&gt;上海市&lt;br&#x2F;&gt;&lt;&#x2F;a&gt;&lt;&#x2F;td&gt;&lt;td&gt;&lt;a href&#x3D;&#39;32.html&#39;&gt;江苏省&lt;br&#x2F;&gt;&lt;&#x2F;a&gt;&lt;&#x2F;td&gt;&lt;td&gt;&lt;a href&#x3D;&#39;33.html&#39;&gt;浙江省&lt;br&#x2F;&gt;&lt;&#x2F;a&gt;&lt;&#x2F;td&gt;&lt;td&gt;&lt;a href&#x3D;&#39;34.html&#39;&gt;安徽省&lt;br&#x2F;&gt;&lt;&#x2F;a&gt;&lt;&#x2F;td&gt;&lt;td&gt;&lt;a href&#x3D;&#39;35.html&#39;&gt;福建省&lt;br&#x2F;&gt;&lt;&#x2F;a&gt;&lt;&#x2F;td&gt;&lt;td&gt;&lt;a href&#x3D;&#39;36.html&#39;&gt;江西省&lt;br&#x2F;&gt;&lt;&#x2F;a&gt;&lt;&#x2F;td&gt;&lt;td&gt;&lt;a href&#x3D;&#39;37.html&#39;&gt;山东省&lt;br&#x2F;&gt;&lt;&#x2F;a&gt;&lt;&#x2F;td&gt;&lt;td&gt;&lt;a href&#x3D;&#39;41.html&#39;&gt;河南省&lt;br&#x2F;&gt;&lt;&#x2F;a&gt;&lt;&#x2F;td&gt;&lt;&#x2F;tr&gt;</span><br><span class="line">&lt;tr class&#x3D;&#39;provincetr&#39;&gt;&lt;td&gt;&lt;a href&#x3D;&#39;42.html&#39;&gt;湖北省&lt;br&#x2F;&gt;&lt;&#x2F;a&gt;&lt;&#x2F;td&gt;&lt;td&gt;&lt;a href&#x3D;&#39;43.html&#39;&gt;湖南省&lt;br&#x2F;&gt;&lt;&#x2F;a&gt;&lt;&#x2F;td&gt;&lt;td&gt;&lt;a href&#x3D;&#39;44.html&#39;&gt;广东省&lt;br&#x2F;&gt;&lt;&#x2F;a&gt;&lt;&#x2F;td&gt;&lt;td&gt;&lt;a href&#x3D;&#39;45.html&#39;&gt;广西壮族自治区&lt;br&#x2F;&gt;&lt;&#x2F;a&gt;&lt;&#x2F;td&gt;&lt;td&gt;&lt;a href&#x3D;&#39;46.html&#39;&gt;海南省&lt;br&#x2F;&gt;&lt;&#x2F;a&gt;&lt;&#x2F;td&gt;&lt;td&gt;&lt;a href&#x3D;&#39;50.html&#39;&gt;重庆市&lt;br&#x2F;&gt;&lt;&#x2F;a&gt;&lt;&#x2F;td&gt;&lt;td&gt;&lt;a href&#x3D;&#39;51.html&#39;&gt;四川省&lt;br&#x2F;&gt;&lt;&#x2F;a&gt;&lt;&#x2F;td&gt;&lt;td&gt;&lt;a href&#x3D;&#39;52.html&#39;&gt;贵州省&lt;br&#x2F;&gt;&lt;&#x2F;a&gt;&lt;&#x2F;td&gt;&lt;&#x2F;tr&gt;</span><br><span class="line">&lt;tr class&#x3D;&#39;provincetr&#39;&gt;&lt;td&gt;&lt;a href&#x3D;&#39;53.html&#39;&gt;云南省&lt;br&#x2F;&gt;&lt;&#x2F;a&gt;&lt;&#x2F;td&gt;&lt;td&gt;&lt;a href&#x3D;&#39;54.html&#39;&gt;西藏自治区&lt;br&#x2F;&gt;&lt;&#x2F;a&gt;&lt;&#x2F;td&gt;&lt;td&gt;&lt;a href&#x3D;&#39;61.html&#39;&gt;陕西省&lt;br&#x2F;&gt;&lt;&#x2F;a&gt;&lt;&#x2F;td&gt;&lt;td&gt;&lt;a href&#x3D;&#39;62.html&#39;&gt;甘肃省&lt;br&#x2F;&gt;&lt;&#x2F;a&gt;&lt;&#x2F;td&gt;&lt;td&gt;&lt;a href&#x3D;&#39;63.html&#39;&gt;青海省&lt;br&#x2F;&gt;&lt;&#x2F;a&gt;&lt;&#x2F;td&gt;&lt;td&gt;&lt;a href&#x3D;&#39;64.html&#39;&gt;宁夏回族自治区&lt;br&#x2F;&gt;&lt;&#x2F;a&gt;&lt;&#x2F;td&gt;&lt;td&gt;&lt;a href&#x3D;&#39;65.html&#39;&gt;新疆维吾尔自治区&lt;br&#x2F;&gt;&lt;&#x2F;a&gt;&lt;&#x2F;td&gt;&lt;td&gt;&lt;br&#x2F;&gt;&lt;&#x2F;td&gt;&lt;&#x2F;tr&gt;</span><br><span class="line"></span><br><span class="line">&lt;&#x2F;table&gt;</span><br><span class="line">&lt;&#x2F;TD&gt;</span><br><span class="line">&lt;&#x2F;TR&gt;</span><br><span class="line">&lt;&#x2F;TBODY&gt;</span><br><span class="line">&lt;&#x2F;TABLE&gt;</span><br><span class="line">&lt;&#x2F;TD&gt;</span><br><span class="line">&lt;&#x2F;TR&gt;</span><br><span class="line">&lt;TR&gt;</span><br><span class="line">&lt;TD style&#x3D;&quot;BACKGROUND-REPEAT: repeat-x; BACKGROUND-POSITION: 50% top&quot;          background&#x3D;images&#x2F;borderBottom.gif&gt;</span><br><span class="line">&lt;&#x2F;TD&gt;&lt;&#x2F;TR&gt;&lt;&#x2F;TBODY&gt;</span><br><span class="line">&lt;&#x2F;TABLE&gt;&lt;&#x2F;TD&gt;&lt;&#x2F;TR&gt;  &lt;TR&gt;    &lt;TD bgColor&#x3D;#e2eefc height&#x3D;2&gt;&lt;&#x2F;TD&gt;&lt;&#x2F;TR&gt;  &lt;TR&gt;</span><br><span class="line">&lt;TD class&#x3D;STYLE3 height&#x3D;60&gt;</span><br><span class="line">&lt;DIV align&#x3D;center style&#x3D;&quot;background-color:#1E67A7; height:75px; color:#fff;&quot;&gt;&lt;br&#x2F;&gt;</span><br><span class="line">版权所有：国家统计局　　&lt;A class&#x3D;STYLE3       href&#x3D;&quot;http:&#x2F;&#x2F;www.miibeian.gov.cn&#x2F;&quot;       target&#x3D;_blank&gt;京ICP备05034670号&lt;&#x2F;A&gt;&lt;BR&gt;&lt;BR&gt;地址：北京市西城区月坛南街57号（100826）&lt;BR&gt;&lt;&#x2F;DIV&gt;&lt;&#x2F;TD&gt;&lt;&#x2F;TR&gt;&lt;&#x2F;TBODY&gt;&lt;&#x2F;TABLE&gt;&lt;&#x2F;BODY&gt;&lt;&#x2F;HTML&gt;</span><br><span class="line">&quot;&quot;&quot;</span><br><span class="line">import re</span><br><span class="line">import re</span><br><span class="line">pattern &#x3D; &quot;&#39;\d&#123;2&#125;\.html&#39;&gt;(.*?)&lt;br&#x2F;&gt;&quot;</span><br><span class="line">provinces &#x3D; re.findall(pattern,html)</span><br><span class="line">print(provinces)</span><br><span class="line">print(len(provinces))</span><br><span class="line">pattern &#x3D; &quot;&lt;a\shref&#x3D;&#39;(\d&#123;2&#125;\.html)&#39;&gt;&quot;</span><br><span class="line">hrefs &#x3D; re.findall(pattern,html)</span><br><span class="line">for item in zip(provinces,hrefs):</span><br><span class="line">    print(item)</span><br></pre></td></tr></table></figure><h1 id="B站评论"><a href="#B站评论" class="headerlink" title="B站评论"></a>B站评论</h1><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br></pre></td><td class="code"><pre><span class="line">import urllib.request</span><br><span class="line">import urllib.parse</span><br><span class="line">import http.cookiejar</span><br><span class="line">import gzip</span><br><span class="line">import json</span><br><span class="line">def crawler():</span><br><span class="line">    url &#x3D; &quot;https:&#x2F;&#x2F;api.bilibili.com&#x2F;x&#x2F;v2&#x2F;reply&#x2F;add&quot;</span><br><span class="line">    headers &#x3D; &#123;</span><br><span class="line">        &quot;Accept&quot;: &quot;application&#x2F;json, text&#x2F;javascript, *&#x2F;*; q&#x3D;0.01&quot;,</span><br><span class="line">        &quot;Accept-Encoding&quot;: &quot;gzip, deflate, br&quot;,</span><br><span class="line">        &quot;Accept-Language&quot;: &quot;zh-CN,zh;q&#x3D;0.9,en;q&#x3D;0.8&quot;,</span><br><span class="line">        &quot;Connection&quot;: &quot;keep-alive&quot;,</span><br><span class="line">        &quot;Content-Type&quot;: &quot;application&#x2F;x-www-form-urlencoded; charset&#x3D;UTF-8&quot;,</span><br><span class="line">        &quot;Cookie&quot;: &quot;_uuid&#x3D;A674206E-E048-2012-1032-BF0FD75BC70E99970infoc; buvid3&#x3D;F4A09182-27A1-4DAD-8F93-C3164E9CAF9053914infoc; sid&#x3D;6rxdamki; im_notify_type_478149120&#x3D;0; CURRENT_FNVAL&#x3D;16; LIVE_BUVID&#x3D;AUTO4915829617489886; rpdid&#x3D;|(J|YkRm|Ruk0J&#39;ul)kmYu~l|; DedeUserID&#x3D;478149120; DedeUserID__ckMd5&#x3D;b117727f75a94a18; SESSDATA&#x3D;50d5ba27%2C1601444487%2Cc9727*41; bili_jct&#x3D;fda4acd2a3e2f0fa699ee9e33bbdc774; CURRENT_QUALITY&#x3D;80; bp_t_offset_478149120&#x3D;377922904044417661; PVID&#x3D;1&quot;,</span><br><span class="line">        &quot;Host&quot;: &quot;api.bilibili.com&quot;,</span><br><span class="line">        &quot;Origin&quot;: &quot;https:&#x2F;&#x2F;www.bilibili.com&quot;,</span><br><span class="line">        &quot;Referer&quot;: &quot;https:&#x2F;&#x2F;www.bilibili.com&#x2F;video&#x2F;BV1zW411s7GS&quot;,</span><br><span class="line">        &quot;Sec-Fetch-Dest&quot;: &quot;empty&quot;,</span><br><span class="line">        &quot;Sec-Fetch-Mode&quot;: &quot;cors&quot;,</span><br><span class="line">        &quot;Sec-Fetch-Site&quot;: &quot;same-site&quot;,</span><br><span class="line">        &quot;User-Agent&quot;: &quot;Mozilla&#x2F;5.0 (Windows NT 10.0; Win64; x64) AppleWebKit&#x2F;537.36 (KHTML, like Gecko) Chrome&#x2F;81.0.4044.113 Safari&#x2F;537.36&quot;,</span><br><span class="line">    &#125;</span><br><span class="line">    form_data &#x3D; &#123;</span><br><span class="line">        &quot;oid&quot;: 20202411,</span><br><span class="line">        &quot;type&quot;: 1,</span><br><span class="line">        &quot;message&quot;: &quot;我淦！！！&quot;,</span><br><span class="line">        &quot;plat&quot;: 1,</span><br><span class="line">        &quot;jsonp&quot;: &quot;jsonp&quot;,</span><br><span class="line">        &quot;csrf&quot;: &quot;fda4acd2a3e2f0fa699ee9e33bbdc774&quot;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    data &#x3D; bytes(urllib.parse.urlencode(form_data),encoding&#x3D;&quot;utf-8&quot;)</span><br><span class="line">    r &#x3D; urllib.request.Request(url&#x3D;url,data&#x3D;data,headers&#x3D;headers)</span><br><span class="line">    cookie &#x3D; http.cookiejar.CookieJar()</span><br><span class="line">    handler &#x3D; urllib.request.HTTPCookieProcessor(cookie)</span><br><span class="line">    opener &#x3D; urllib.request.build_opener(handler)</span><br><span class="line">    #urllib.request.install_opener(opener)</span><br><span class="line">    response &#x3D; opener.open(r)</span><br><span class="line">    resp &#x3D; gzip.GzipFile(fileobj&#x3D;response)</span><br><span class="line">    print(resp.read().decode(&quot;utf-8&quot;))</span><br><span class="line"></span><br><span class="line">crawler()</span><br></pre></td></tr></table></figure><h1 id="爬取必应壁纸"><a href="#爬取必应壁纸" class="headerlink" title="爬取必应壁纸"></a>爬取必应壁纸</h1><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br></pre></td><td class="code"><pre><span class="line">import requests</span><br><span class="line">from lxml import etree</span><br><span class="line"></span><br><span class="line">class BingCrawler():</span><br><span class="line">    def __init__(self):</span><br><span class="line">        self.BASE_URL &#x3D; &quot;https:&#x2F;&#x2F;bing.ioliu.cn&quot;</span><br><span class="line">        self.TOTAL_PAGE &#x3D; 124</span><br><span class="line">        self.headers &#x3D; &#123;</span><br><span class="line">            &quot;User-Agent&quot;: &quot;Mozilla&#x2F;5.0 (Windows NT 10.0; Win64; x64) AppleWebKit&#x2F;537.36 (KHTML, like Gecko) Chrome&#x2F;81.0.4044.92 Safari&#x2F;537.36&quot;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">    def spider(self):</span><br><span class="line">        session &#x3D; requests.Session()</span><br><span class="line">        for index in range(1 ,self.TOTAL_PAGE+1):</span><br><span class="line">            url &#x3D; self.BASE_URL + f&quot;&#x2F;?p&#x3D;&#123;index&#125;&quot;</span><br><span class="line">            response &#x3D; session.get(url&#x3D;url, headers&#x3D;self.headers)</span><br><span class="line">            yield response.content.decode(&quot;utf8&quot;)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    def parser(html):</span><br><span class="line">        selector &#x3D; etree.HTML(html)</span><br><span class="line">        url_list &#x3D; selector.xpath(&quot;&#x2F;&#x2F;div[@class&#x3D;&#39;item&#39;]&#x2F;&#x2F;div[@class&#x3D;&#39;options&#39;]&#x2F;a[2]&#x2F;@href&quot;)</span><br><span class="line">        return url_list</span><br><span class="line"></span><br><span class="line">    def save_picture(self, url_list):</span><br><span class="line">        session &#x3D; requests.Session()</span><br><span class="line">        for url in url_list:</span><br><span class="line">            file_name &#x3D; url.split(&quot;&#x2F;&quot;)[2][:-15] + &quot;.jpg&quot;</span><br><span class="line">            picture_url &#x3D;  self.BASE_URL + url</span><br><span class="line">            response &#x3D; session.get(picture_url, headers&#x3D;self.headers)</span><br><span class="line">            with open(file_name, &quot;wb&quot;) as file:</span><br><span class="line">                file.write(response.content)</span><br><span class="line"></span><br><span class="line">    def run(self):</span><br><span class="line">        html_gen &#x3D; self.spider()</span><br><span class="line">        for html in html_gen:</span><br><span class="line">            url_list &#x3D; self.parser(html)</span><br><span class="line">            self.save_picture(url_list)</span><br><span class="line"></span><br><span class="line">if __name__ &#x3D;&#x3D; &#39;__main__&#39;:</span><br><span class="line">    bing_spider &#x3D; BingCrawler()</span><br><span class="line">    bing_spider.run()</span><br></pre></td></tr></table></figure><h1 id="百度热点"><a href="#百度热点" class="headerlink" title="百度热点"></a>百度热点</h1><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">    import requests</span><br><span class="line">import re</span><br><span class="line"></span><br><span class="line">def sp():</span><br><span class="line">    headers &#x3D; &#123;</span><br><span class="line">        &quot;User-Agent&quot;: &quot;Mozilla&#x2F;5.0 (Windows NT 10.0; Win64; x64) AppleWebKit&#x2F;537.36 (KHTML, like Gecko) Chrome&#x2F;80.0.3987.149 Safari&#x2F;537.36&quot;</span><br><span class="line">    &#125;</span><br><span class="line">    url &#x3D; &quot;http:&#x2F;&#x2F;top.baidu.com&#x2F;buzz?b&#x3D;341&amp;c&#x3D;513&amp;fr&#x3D;topbuzz_b342_c513&quot;</span><br><span class="line">    response &#x3D; requests.get(url, headers)</span><br><span class="line">    html &#x3D; response.content.decode(&quot;gb2312&quot;)</span><br><span class="line">    pattern &#x3D; &#39;&lt;td\sclass&#x3D;&quot;keyword&quot;&gt;\s+&lt;a.*?&gt;(.*?)&lt;&#x2F;a&gt;&#39;</span><br><span class="line">    result &#x3D; re.findall(pattern, html)</span><br><span class="line">    for index, msg in enumerate(result,1):</span><br><span class="line">        print(f&quot;&#123;index&#125;、&#123;msg&#125;&quot;)</span><br><span class="line">if __name__ &#x3D;&#x3D; &#39;__main__&#39;:</span><br><span class="line">    sp()</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;blockquote&gt;
&lt;p&gt;更新了&lt;/p&gt;
&lt;/blockquote&gt;
    
    </summary>
    
    
    
  </entry>
  
  <entry>
    <title>爬虫基础简介</title>
    <link href="http://yoursite.com/2020/03/08/%E7%88%AC%E8%99%AB%E5%9F%BA%E7%A1%80%E7%AE%80%E4%BB%8B/"/>
    <id>http://yoursite.com/2020/03/08/%E7%88%AC%E8%99%AB%E5%9F%BA%E7%A1%80%E7%AE%80%E4%BB%8B/</id>
    <published>2020-03-08T08:26:04.360Z</published>
    <updated>2020-03-08T08:34:57.624Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p>标志着我的爬虫开始学习了。</p></blockquote><a id="more"></a><h1 id="爬虫的使用场景分类"><a href="#爬虫的使用场景分类" class="headerlink" title="爬虫的使用场景分类"></a>爬虫的使用场景分类</h1><ul><li>通用爬虫:抓取互联网一整张数据  </li></ul><hr><ul><li>聚焦爬虫：在通用爬虫的基础上，抓取页面中指定局部的数据</li></ul><hr><ul><li>增量式爬虫：检测网站中更新的情况，只会抓取网站更新的数据</li></ul><h1 id="爬虫的矛盾"><a href="#爬虫的矛盾" class="headerlink" title="爬虫的矛盾"></a>爬虫的矛盾</h1><ul><li>反爬机制</li></ul><hr><ul><li>反反爬机制</li></ul><hr><ul><li>robots.txt协议(君子协议)</li></ul><hr><h1 id="http协议-amp-https协议"><a href="#http协议-amp-https协议" class="headerlink" title="http协议&amp;https协议"></a>http协议&amp;https协议</h1><h2 id="概念"><a href="#概念" class="headerlink" title="概念"></a>概念</h2><pre><code>- http协议: 超文本传输协议,是服务器与客户端之间传输信息的一种形式.- https协议: 安全的超文本传输协议.</code></pre><h2 id="常用请求头信息"><a href="#常用请求头信息" class="headerlink" title="常用请求头信息"></a>常用请求头信息</h2><pre><code>- User-Agent: 请求载体的身份标识.- Connection: 请求完毕后,是断开连接还是保持连接.</code></pre><h2 id="常用响应头信息"><a href="#常用响应头信息" class="headerlink" title="常用响应头信息"></a>常用响应头信息</h2><pre><code>- Content-Type: 服务器响应回客户端的数据类型.</code></pre><h2 id="https协议的加密方式"><a href="#https协议的加密方式" class="headerlink" title="https协议的加密方式"></a>https协议的加密方式</h2><ul><li>对称秘钥加密: 对称加密算法的特点是算法公开、计算量小、加密速度快、加密效率高.缺点也很明显就是安全性不高，信息以及秘钥可以被窃取.<br><img src="/images/%E5%AF%B9%E7%A7%B0%E7%A7%98%E9%92%A5%E5%8A%A0%E5%AF%86.png" alt="对称秘钥加密"></li><li>非对称秘钥加密: 与对称密钥加密相比，优点在于无需共享的通用密钥，解密的私钥不发往任何用户。即使公钥在网上被截获，如果没有与其匹配的私钥，也无法解密，所截获的公钥是没有任何用处的。缺点在于与对称秘钥加密相比，所需时间较长。还有可能公钥被篡改，导致客户端无法解密。<br><img src="/images/%E9%9D%9E%E5%AF%B9%E7%A7%B0%E7%A7%98%E9%92%A5%E5%8A%A0%E5%AF%86.png" alt="非对称秘钥加密"></li><li>证书秘钥加密: 解决了非对称秘钥加密所存在的公钥会被挟持的可能，通过第三方认证机构对公钥进行数字认证，从而判断是否被挟持。<br><img src="/images/%E8%AF%81%E4%B9%A6%E7%A7%98%E9%92%A5%E5%8A%A0%E5%AF%86.png" alt="证书秘钥加密"></li></ul>]]></content>
    
    <summary type="html">
    
      &lt;blockquote&gt;
&lt;p&gt;标志着我的爬虫开始学习了。&lt;/p&gt;
&lt;/blockquote&gt;
    
    </summary>
    
    
      <category term="爬虫" scheme="http://yoursite.com/categories/%E7%88%AC%E8%99%AB/"/>
    
    
      <category term="爬虫" scheme="http://yoursite.com/tags/%E7%88%AC%E8%99%AB/"/>
    
  </entry>
  
  <entry>
    <title>Markdown</title>
    <link href="http://yoursite.com/2020/03/08/markdown/"/>
    <id>http://yoursite.com/2020/03/08/markdown/</id>
    <published>2020-03-08T06:32:59.651Z</published>
    <updated>2020-03-08T07:16:39.083Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p>一些jupyter notebook的快捷键操作和Markdown的一些语法介绍</p></blockquote><a id="more"></a><h1 id="jupyter-notebook"><a href="#jupyter-notebook" class="headerlink" title="jupyter notebook"></a>jupyter notebook</h1><ul><li><strong>Esc</strong>退出当前指定的单元格内</li><li><strong>up</strong> and <strong>down</strong>上下移动想要选中的单元格就按<strong>enter</strong>进入</li><li><strong>A</strong> 或 <strong>B</strong> 向上或向下增添一个代码单元格</li><li><strong>M</strong>调出Markdown单元格</li><li><strong>Y</strong>调出代码单元格</li><li><strong>Shift+up</strong> <strong>or</strong> <strong>down</strong> 连续选中单元格</li><li><strong>D+D</strong> 删除</li><li><strong>Z</strong> 将撤销单元格删除</li></ul><h1 id="Markdown"><a href="#Markdown" class="headerlink" title="Markdown"></a>Markdown</h1><p><a href="https://www.markdownguide.org/" target="_blank" rel="noopener">Mrakdown</a>是一种轻量化的、易于学习的标记语言，用于格式化纯文本。它的语法与HTLM标记有一对一的对应关系。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 这是一级标题</span></span><br><span class="line"><span class="comment">## 这是二级标题</span></span><br><span class="line"><span class="comment">### 这是三级标题   \\一共有六级标题\\</span></span><br><span class="line"></span><br><span class="line">这是一些纯文本信息</span><br><span class="line"></span><br><span class="line">通过**粗体** 和 __blod__ , 或*斜体* 和 __italic__添加重点。</span><br><span class="line"></span><br><span class="line">段落必须用空行隔开</span><br><span class="line"></span><br><span class="line">* 点数</span><br><span class="line">  * 可以缩进</span><br><span class="line"><span class="number">1.</span> 也可用这种形式</span><br><span class="line"><span class="number">2.</span> 空格</span><br><span class="line"></span><br><span class="line">[超链接](网址)</span><br><span class="line">！[图片名字](图片位置)</span><br><span class="line"></span><br><span class="line">内联代码用单引号<span class="string">'foo()'</span></span><br><span class="line">代码块用三个单引号</span><br><span class="line"><span class="string">'''</span></span><br><span class="line"><span class="string">代码块</span></span><br><span class="line"><span class="string">'''</span></span><br><span class="line"></span><br><span class="line">或者用四个空格组成：</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">print</span>（）</span><br><span class="line">    </span><br><span class="line">    </span><br><span class="line">列表的表示方法：</span><br><span class="line">name | 价格 |  数量  </span><br><span class="line">-|-|-</span><br><span class="line">香蕉 | $<span class="number">1</span> | <span class="number">5</span> |</span><br><span class="line">苹果 | $<span class="number">1</span> | <span class="number">6</span> |</span><br><span class="line">草莓 | $<span class="number">1</span> | <span class="number">7</span> |</span><br><span class="line"></span><br><span class="line">-----------</span><br><span class="line"></span><br><span class="line">name | <span class="number">111</span> | <span class="number">222</span> | <span class="number">333</span> | <span class="number">444</span></span><br><span class="line">- | :-: | :-: | :-: | -:</span><br><span class="line">aaa | bbb | ccc | ddd | eee| </span><br><span class="line">fff | ggg| hhh | iii | <span class="number">000</span>|</span><br><span class="line"></span><br><span class="line">-----------</span><br><span class="line"></span><br><span class="line">name | <span class="number">111</span> | <span class="number">222</span> | <span class="number">333</span> | <span class="number">444</span></span><br><span class="line">:-: | :-: | :-: | :-: | :-:</span><br><span class="line">aaa | bbb | ccc | ddd | eee| </span><br><span class="line">fff | ggg| hhh | iii | <span class="number">000</span>|</span><br><span class="line"></span><br><span class="line">说明：</span><br><span class="line"><span class="number">1</span>）|、-、:之间的多余空格会被忽略，不影响布局。</span><br><span class="line"><span class="number">2</span>）默认标题栏居中对齐，内容居左对齐。</span><br><span class="line"><span class="number">3</span>）-:表示内容和标题栏居右对齐，:-表示内容和标题栏居左对齐，:-:表示内容和标题栏居中对齐。</span><br><span class="line"><span class="number">4</span>）内容和|之间的多余空格会被忽略，每行第一个|和最后一个|可以省略，-的数量至少有一个。</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;blockquote&gt;
&lt;p&gt;一些jupyter notebook的快捷键操作和Markdown的一些语法介绍&lt;/p&gt;
&lt;/blockquote&gt;
    
    </summary>
    
    
      <category term="jupyter notebook" scheme="http://yoursite.com/categories/jupyter-notebook/"/>
    
      <category term="Markdown" scheme="http://yoursite.com/categories/jupyter-notebook/Markdown/"/>
    
    
      <category term="jupyter notebook" scheme="http://yoursite.com/tags/jupyter-notebook/"/>
    
      <category term="python" scheme="http://yoursite.com/tags/python/"/>
    
      <category term="Markdown" scheme="http://yoursite.com/tags/Markdown/"/>
    
  </entry>
  
  <entry>
    <title>jupyter小工具</title>
    <link href="http://yoursite.com/2020/03/01/jupyter%E5%B0%8F%E5%B7%A5%E5%85%B7/"/>
    <id>http://yoursite.com/2020/03/01/jupyter%E5%B0%8F%E5%B7%A5%E5%85%B7/</id>
    <published>2020-03-01T11:20:51.483Z</published>
    <updated>2020-03-01T15:41:41.879Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p>这些小工具可以做一些比较方便的交互</p></blockquote><a id="more"></a><h1 id="滑块"><a href="#滑块" class="headerlink" title="滑块"></a>滑块</h1><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> ipywidgets <span class="keyword">import</span> interact</span><br><span class="line"><span class="keyword">import</span> ipywidgets <span class="keyword">as</span> widgets</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">f</span><span class="params">(x)</span>:</span></span><br><span class="line">    <span class="keyword">return</span> x</span><br><span class="line">interact(f,x=<span class="number">10</span>,);</span><br></pre></td></tr></table></figure><p><img src="/images/%E6%BB%91%E5%9D%97.png" alt="滑块"></p><h1 id="布尔值生成复选框"><a href="#布尔值生成复选框" class="headerlink" title="布尔值生成复选框"></a>布尔值生成复选框</h1><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> ipywidgets <span class="keyword">import</span> interact</span><br><span class="line"></span><br><span class="line">interact(f,x=<span class="literal">True</span>);</span><br></pre></td></tr></table></figure><p><img src="/images/%E5%B8%83%E5%B0%94%E5%80%BC%E7%94%9F%E6%88%90%E5%A4%8D%E9%80%89%E6%A1%86.png" alt="布尔值生成复选框"></p><h1 id="字符串生成文本区域"><a href="#字符串生成文本区域" class="headerlink" title="字符串生成文本区域"></a>字符串生成文本区域</h1><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> ipywidgets <span class="keyword">import</span> interact</span><br><span class="line">interact(f,x=<span class="string">''</span>);</span><br></pre></td></tr></table></figure><p><img src="/images/%E5%AD%97%E7%AC%A6%E4%B8%B2%E7%94%9F%E6%88%90%E6%96%87%E6%9C%AC%E5%8C%BA%E5%9F%9F.png" alt="字符串生成文本区域"></p><h1 id="播放器"><a href="#播放器" class="headerlink" title="播放器"></a>播放器</h1><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"> <span class="keyword">import</span> ipywidgets <span class="keyword">as</span> widgets</span><br><span class="line">play = widgets.Play(</span><br><span class="line">    <span class="comment"># interval = 10,</span></span><br><span class="line">    value = <span class="number">50</span>,</span><br><span class="line">    min = <span class="number">0</span>,</span><br><span class="line">    max = <span class="number">100</span>,</span><br><span class="line">    step = <span class="number">1</span>,</span><br><span class="line">    description = <span class="string">'Press play'</span>,</span><br><span class="line">    disabled=<span class="literal">False</span></span><br><span class="line">)</span><br><span class="line">slider = widgets.IntSlider()</span><br><span class="line">widgets.jslink((play,<span class="string">'value'</span>),(slider,<span class="string">'value'</span>))</span><br><span class="line">widgets.HBox([play,slider])</span><br></pre></td></tr></table></figure><p><img src="/images/%E6%92%AD%E6%94%BE%E5%99%A8.png" alt="播放器"></p><h1 id="日历"><a href="#日历" class="headerlink" title="日历"></a>日历</h1><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">widgets.DatePicker(</span><br><span class="line">    description = <span class="string">'Pick a Date'</span>,</span><br><span class="line">    disabled = <span class="literal">False</span></span><br><span class="line">)</span><br></pre></td></tr></table></figure><p><img src="/images/%E6%97%A5%E5%8E%861.png" alt="日历1"><br><img src="/images/%E6%97%A5%E5%8E%862.png" alt="日历2"></p><h1 id="调色盘"><a href="#调色盘" class="headerlink" title="调色盘"></a>调色盘</h1><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">widgets.ColorPicker(</span><br><span class="line">    concise = <span class="literal">False</span>,</span><br><span class="line">    description = <span class="string">'Pick a color'</span>,</span><br><span class="line">    value = <span class="string">'blue'</span>,</span><br><span class="line">    disabled = <span class="literal">False</span></span><br><span class="line">)</span><br></pre></td></tr></table></figure><p><img src="/images/%E8%B0%83%E8%89%B2%E7%9B%981.png" alt="调色盘1"><br><img src="/images/%E8%B0%83%E8%89%B2%E7%9B%982.png" alt="调色盘2"></p><h1 id="标签"><a href="#标签" class="headerlink" title="标签"></a>标签</h1><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">tab_contents = [<span class="string">'P0'</span>,<span class="string">'P1'</span>,<span class="string">'P2'</span>,<span class="string">'P3'</span>,<span class="string">'P4'</span>]</span><br><span class="line">children = [widgets.Text(description=name) <span class="keyword">for</span> name <span class="keyword">in</span> tab_contents]</span><br><span class="line">tab = widgets.Tab()</span><br><span class="line">tab.children  = children</span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> range(len(children)):</span><br><span class="line">    tab.set_title(i,str(i))</span><br><span class="line">tab</span><br></pre></td></tr></table></figure><p><img src="/images/%E6%A0%87%E7%AD%BE.png" alt="标签"></p>]]></content>
    
    <summary type="html">
    
      &lt;blockquote&gt;
&lt;p&gt;这些小工具可以做一些比较方便的交互&lt;/p&gt;
&lt;/blockquote&gt;
    
    </summary>
    
    
      <category term="python" scheme="http://yoursite.com/categories/python/"/>
    
      <category term="jupyter notebook" scheme="http://yoursite.com/categories/python/jupyter-notebook/"/>
    
    
      <category term="jupyter notebook" scheme="http://yoursite.com/tags/jupyter-notebook/"/>
    
  </entry>
  
</feed>
